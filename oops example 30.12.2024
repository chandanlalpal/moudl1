
////////////////////////////////
// Base class Animal
class Animal {
    // Instance variable
    String name;
    
    // Constructor
    public Animal(String name) {
        this.name = name;
    }
    
    // Method to be overridden
    public void speak() {
        System.out.println(name + " makes a sound.");
    }
}

// Derived class Dog that inherits from Animal
class Dog extends Animal {
    
    // Constructor to initialize name
    public Dog(String name) {
        super(name);  // Call the constructor of the parent class
    }
    
    // Override the speak method
    @Override
    public void speak() {
        System.out.println(name + " barks.");
    }
}

public class Main {
    public static void main(String[] args) {
        // Create objects
        Animal animal = new Animal("Generic Animal");
        Dog dog = new Dog("Buddy");
        
        // Call methods
        animal.speak();  // Output: Generic Animal makes a sound.
        dog.speak();     // Output: Buddy barks.
    }
}

//////////////////////////////////

// Define the Student class
class Student {
    String name;
    int age;
    String grade;
    
    // Constructor to initialize the Student object
    public Student(String name, int age, String grade) {
        this.name = name;
        this.age = age;
        this.grade = grade;
    }
    
    // Method to display student information
    public void displayStudentInfo() {
        System.out.println("Student Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Grade: " + grade);
    }

    // Method to change grade
    public void changeGrade(String newGrade) {
        this.grade = newGrade;
        System.out.println(name + "'s grade has been updated to " + grade);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create Student objects
        Student student1 = new Student("Alice", 20, "A");
        Student student2 = new Student("Bob", 22, "B");
        
        // Display information of each student
        student1.displayStudentInfo();
        student2.displayStudentInfo();
        
        // Change grade for student1
        student1.changeGrade("A+");
        student1.displayStudentInfo();
    }
}




///////////////////////////////////
// Define the Car class
class Car {
    // Instance variables (attributes)
    String make;
    String model;
    int year;
    
    // Constructor to initialize the Car object
    public Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }
    
    // Method to display car details
    public void displayDetails() {
        System.out.println("Car Make: " + make);
        System.out.println("Car Model: " + model);
        System.out.println("Car Year: " + year);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create objects (instances) of the Car class
        Car car1 = new Car("Toyota", "Corolla", 2020);
        Car car2 = new Car("Honda", "Civic", 2022);
        
        // Call the displayDetails method on each object
        car1.displayDetails();
        car2.displayDetails();
    }
}

//////////////////////////////////////

// BankAccount class with constructor, getter, and setter methods
class BankAccount {
    private String accountHolder;
    private double balance;

    // Constructor to initialize BankAccount
    public BankAccount(String accountHolder, double balance) {
        this.accountHolder = accountHolder;
        this.balance = balance;
    }

    // Getter for accountHolder (used to retrieve the value of 'accountHolder')
    public String getAccountHolder() {
        return accountHolder;  // This is the getter for the 'accountHolder' field
    }

    // Setter for accountHolder
    public void setAccountHolder(String accountHolder) {
        this.accountHolder = accountHolder;
    }

    // Getter for balance (used to retrieve the value of 'balance')
    public double getBalance() {
        return balance;  // This is the getter for the 'balance' field
    }

    // Setter for balance
    public void setBalance(double balance) {
        if (balance >= 0) {
            this.balance = balance;
        } else {
            System.out.println("Balance cannot be negative.");
        }
    }

    // Method to deposit money
    public void deposit(double amount) {
        if (amount > 0) {
            this.balance += amount;
            System.out.println("Deposited: " + amount);
        } else {
            System.out.println("Deposit amount must be positive.");
        }
    }

    // Method to withdraw money
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            this.balance -= amount;
            System.out.println("Withdrew: " + amount);
        } else {
            System.out.println("Invalid withdrawal amount.");
        }
    }

    // Method to display account details
    public void displayAccountDetails() {
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Balance: " + balance);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create BankAccount object using constructor
        BankAccount account = new BankAccount("John Doe", 5000.0);
        
        // Display initial account details
        account.displayAccountDetails();
        
        // Deposit money
        account.deposit(1500.0);
        
        // Withdraw money
        account.withdraw(2000.0);
        
        // Display updated account details
        account.displayAccountDetails();
    }
}


/////////////////////
//getter and setter
// BankAccount class with getter and setter methods
class BankAccount {
    private String accountHolder;
    private double balance;

    // Setter for accountHolder (used to set the value of 'accountHolder')
    public void setAccountHolder(String accountHolder) {
        this.accountHolder = accountHolder;
    }

    // Setter for balance (used to set the value of 'balance')
    public void setBalance(double balance) {
        if (balance >= 0) {
            this.balance = balance;
        } else {
            System.out.println("Balance cannot be negative.");
        }
    }

    // Getter for accountHolder (used to retrieve the value of 'accountHolder')
    public String getAccountHolder() {
        return accountHolder;  // This is the getter for 'accountHolder' field
    }

    // Getter for balance (used to retrieve the value of 'balance')
    public double getBalance() {
        return balance;  // This is the getter for 'balance' field
    }

    // Method to deposit money
    public void deposit(double amount) {
        if (amount > 0) {
            this.balance += amount;
            System.out.println("Deposited: " + amount);
        } else {
            System.out.println("Deposit amount must be positive.");
        }
    }

    // Method to withdraw money
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            this.balance -= amount;
            System.out.println("Withdrew: " + amount);
        } else {
            System.out.println("Invalid withdrawal amount.");
        }
    }

    // Method to display account details
    public void displayAccountDetails() {
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Balance: " + balance);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create BankAccount object
        BankAccount account = new BankAccount();
        
        // Set account details using setters
        account.setAccountHolder("John Doe");
        account.setBalance(5000.0);
        
        // Display initial account details
        account.displayAccountDetails();
        
        // Deposit money
        account.deposit(1500.0);
        
        // Withdraw money
        account.withdraw(2000.0);
        
        // Display updated account details
        account.displayAccountDetails();
    }
}
